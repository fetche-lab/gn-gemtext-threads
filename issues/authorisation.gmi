# Clean up Authorisation

Look at Chris' authorisation code:

=> https://github.com/genenetwork/gn-proxy

Atm genenetwork2's handling of authorisation is a bit clunky; Since @Bonface is working on the data data up-loader, and it requires authorisation, this is a good time to clean up authorisation.

# Tags

* assigned: bonfacem, pjotrp, zachs
* keywords: authorisation, reference
* priority: medium
* status: closed, completed, obsoleted
* type: feature request

### Tasks

* [x] Make user able to delete/ add extra value

* [x] Fetch complete list of samples from database and genotype file
  instead of only fetching that list from the database.  Look at trait
  page for reference.

* [X] Extend idea of csv generation to probeset data.  Get data from the genotype file and work out how to update the values from the database.

* [X] Every resource needs to have the 3 fields set for the group-mask and default-mask: "data", "metadata", "admin". Otherwise, a hash-ref error will be thrown: On this regard, the documentation for gn-proxy should be updated since it's abit misleading (this hasn't been done).

```
03 ~~> hash-ref: no value found for key
  key: 'admins
```

# Introduction

mRNA datasets ("ProbeSetFreeze" in the DB) contain traits, so when you assign privileges to an mRNA dataset, it will apply to all traits within.

But the phenotype resources (for example the dataset name "BXDPublish"; the stuff in the PublishXRef, etc tables) are just the traits themselves. The rows of "PublishFreeze" in the DB don't correspond to individual resources like the rows of ProbeSetFreeze (neither do databased genotypes - GenoFreeze - for that matter). There isn't really any "containing" classification for them beyond the group. BXD phenotype traits can each come from different studies and thus have different privileges for different users, etc, but there's nothing in the database really representing that.

This means that if you want to change privileges for phenotype data, you have to do it trait by trait (or at least to a selection of traits you manually choose). But for mRNA ("ProbeSet") traits you can just refer to the entire dataset (and as far as I'm aware this will always be the case; there's never a need to assign privileges trait-by-trait for the mRNA traits.

Another way of representing this is that for mRNA datasets you have the following levels:

Species -> Group -> Dataset (this is a resource) -> Traits

But for phenotypes/genotypes:

Species -> Group -> Traits (each is a resource)


On the UI(quote from Zach):

````
> One interface issue I ran into is how to add/remove groups (since
> currently the proxy only cares about groups for retrieving the
> privilege masks). I think I set it up so that you can search for
> groups by a user's name, e-mail, or parts of the Group Name itself,
> though I was uncertain about that because it means that anyone doing
> this could see every group/user.  For adding users to a group, I
> have people direct input e-mails (instead of giving the ability to
> search).

````

An owner, from the proxy views has super-user privileges for everything

Other issues pointed out:

```
> The /trait/update endpoint*, when accessed from >
  "/trait/<name>/edit/inbredset-id/<inbredset_id>", currently doesn't
  seem to work because kwargs/args are empty. This is presumably due
  to it being a POST endpoint and not having the necessary fields
  passed through the URL. I can access all the form inputs in the
  decorator with request.form, though those form inputs still don't
  include the resource_id or inbredset_id/dataset_name with those same
  variable names; they're in the edit_phenotype form as inbred-set-id
  and dataset-name respectively (this is why I mentioned the variable
  names; if I gave the decorator access to them with request.form,
  they didn't match the variable names it expected).  So I'm not
  really sure how best to fix this; I'm guessing that either the >
  trait/update endpoint needs to be changed to include the resource ID
  > (though this is complicated by the fact that there can be many
  traits within a resource_id for ProbeSet traits; it's only phenotype
  traits where each individual trait is its own resource), or the
  decorator itself needs to be changed to also access request.form.

> There's also a separate issue with
  "/trait/edit/probeset-name/<dataset_name>" that likely stems from
  the fact that you need both a dataset name and trait ID for
  "probeset" traits (and in this case dataset_name is actually the
  trait ID). So this probably calls for the endpoint itself being
  changed in some way.
```

### Resolution

=> https://github.com/genenetwork/genenetwork2/pull/614 Editing Metadata Endpoints

Should anything new arise, a new issue will/should be created.

* closed
